/*
  ============================================================================
  ----------------------------------------------------------------------------

	File		: 	job_fidget_fairy.skrit

	Author(s)	: 	Eric Tams orig Bartosz Kijanka

	Purpose		: 	Follow nearby creatues at a distance, heal or give mana if needed.

	(C)opyright 2000 Gas Powered Games, Inc.

  ----------------------------------------------------------------------------
  ============================================================================
*/


Go		m_Go$;
Go		m_Spell$;
GoMind	m_Mind$;
GoBody  m_Body$;
Job		m_Job$;

#include "k_job_c_mcp_fidget_utils"

////////////////////////////////////////////////////////////////////////////////
// helper functions

void GetSpell$( )
{
	m_Spell$ = m_Go$.Inventory.GetItem( il_active_primary_spell );
}

void TryHeal$( )
{
    if( m_Spell$ != NULL )
    {
        m_Mind$.TempQtColl1.Clear;
        m_Mind$.TempGopColl1.Clear;
        m_Mind$.TempQtColl1.Add( QT_FRIEND );
        m_Mind$.TempQtColl1.Add( QT_ALIVE );
        if( m_Mind$.GetVisible( m_Mind$.TempQtColl1, m_Mind$.TempGopColl1 ) )
        {
            int i$ = 0;
            int iend$ = m_Mind$.TempGopColl1.size();

            while( i$ < iend$ )
            {
                Go temp$ = m_Mind$.TempGopColl1.Get( i$ );
                if ( m_Mind$.GetDistance( temp$ ) <= m_Spell$.Magic.CastRange )
                {
                    if( m_Spell$.Magic.IsCastableOn( temp$ ) && ( temp$.Player.Controller == PC_HUMAN ))
                    {
                        m_Mind$.SDoJob( MakeJobReq( JAT_CAST, JQ_ACTION, QP_FRONT, AO_REFLEX, temp$.goid, m_Spell$.Goid ) );
                        break;
                    }
                }
                i$ += 1;
            }
        }
    }
}
////////////////////////////////////////////////////////////////////////////////

startup state Unknown$
{
}

////////////////////////////////////////////////////////////////////////////////
//	init
event OnJobInitPointers$( Job job$ )
{
	m_Job$					= job$;
	m_Go$					= job$.Go;
	m_Mind$					= job$.Go.Mind;
	m_Body$					= job$.Go.Body;
}

event OnJobInit$( Job job$ )
{
	OnJobInitPointers$( job$ );

	GetSpell$();

	SetState Wandering$;
}

state Wandering$
{
	trigger OnWorldMessage$( WE_ANIM_DONE )
	{
		StartFidgetIfRequired$();
	}

	trigger OnTimer$( 1 )
	{
		This.CreateTimer( 1 , 1 ); 
		TryHeal$();
	}

	event OnEnterState$
	{
		StartFidgetIfRequired$();

		This.CreateTimer( 1 , 1 );
	}
}